git的三个阶段：工作区，暂存区，本地库
git因为与linux用一个爸爸所以可以使用linux命令
git config --global user.name 用户名
git config --global user.email 邮箱      为了标记用户只需设置一次
git init 初始化版本库，生成.git文件
git status 查看git状态
git add 文件名   将文件加入暂存区
git rm --cached 文件名  将删除暂存区的文件但工作区依旧存在
git commit -m "日志名字" 文件名    提交本地库（先add到暂存区才能commit到本地库）git reflog  可以查看所有分支的所有操作记录（指针指向哪个版本）精简版
git log 可以显示所有提交过的版本信息（比reflog更详细） 详细版
git reset --hard 版本号    实现版本的穿梭（切换版本）

分支：
从主线上分离出来进行另外的操作，而又不影响主线，主线又可以继续干它的事，是不是有点像线程，最后分支做完事后合并到主线上而分支的任务完成可以删掉了。这样是不是很方便，主线继续做它的事，分支用来解决临时需求，二者互不相干。
git branch -v       	查看分支
git branch 分支名   	创建分支
git checkout 分支名 	切换分支（指针指向该分支）
			修改完之后还得加入add暂存提交commit本地库
git merge 分支名	把指定分支合并到当前分支

分支合并冲突：
合并分支时，两个分支在同一个文件的同一个位置有两套完全不同的修改，git无法替我们决定使用哪一个，必须人为决定新代码的内容。
解决办法：
1.进入文件将不需要的代码删除，保存退出
2.加入暂存区git add 文件名
3.提交本地库（不带文件名）git commit -m "日志"

创建远程仓库别名：
git remote -v			查看当前所有的远程地址别名
git remote add 别名 远程地址	增加远程地址对应的别名
